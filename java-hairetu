<配列>
・Rubyと同様にJavaにも配列がありますが、Rubyの配列とは性質が異なります。

<<Javaの配列は、格納する要素の数を最初に決める必要があり、かつ後で要素数を変更することができません。>>

要素を増やす場合は、サイズの大きな配列を新たに作成して元データをコピーするか、ArrayListというリストの一種を使用します。
ArrayListは要素の数を変更できる配列のようなもので、ウェブアプリケーション開発ではよく使用されます。

[replit]

class Main {
  public static void main(String[] args) {
    int[] scores;
    scores = new int[3];

    scores[0] = 1;
    scores[1] = 5;
    scores[2] = 10;

    System.out.println(scores[0]);
    System.out.println(scores[1]);
    System.out.println(scores[2]);
  }
}

コードを実行すると、
1
5
10

と表示される。
Rubyの場合と比べて、コードの記述量が多くなっています。
いま記述したコードを参照しながら、配列の使い方を確認していきましょう。


<配列の使い方>
Javaで配列を使用する際は、以下の手順が必要です。

① 配列の宣言を行う
② 配列の要素を作成し、配列に代入する
③ 配列の要素に値を代入する

それぞれの意味を確認しましょう。

① 配列の宣言を行う
最初に行うのは配列の宣言です。
宣言は以下のように行います。


int[] scores;


前の章で、整数型の変数を宣言する時は、int score;といった記述をすると学習しました。
それと同じように、int型の整数を格納する配列の宣言はint[] scores;と記述します。
この「int」は要素として格納したいデータ型を指定するもので、例えばlong型の整数を格納する配列ならlong[] scores;のように宣言します。
この記述によって、配列という入れ物の宣言を行ったことになります。

